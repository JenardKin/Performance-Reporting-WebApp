# Generated by Django 2.1.3 on 2018-11-30 00:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TEnergydata',
            fields=[
                ('ts', models.DateTimeField(blank=True, null=True)),
                ('periodid', models.IntegerField(db_column='periodID', primary_key=True, serialize=False)),
                ('nws', models.FloatField(blank=True, null=True)),
                ('kw_net', models.FloatField(blank=True, null=True)),
                ('kw_exp', models.FloatField(blank=True, null=True)),
                ('validfrom', models.DateTimeField(blank=True, db_column='validFrom', null=True)),
                ('validto', models.DateTimeField(blank=True, db_column='validTo', null=True)),
                ('kw_min_exp', models.CharField(blank=True, db_column='kW_min_exp', max_length=32, null=True)),
                ('curtailed', models.IntegerField(blank=True, null=True)),
                ('edited', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_EnergyData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TEventdata',
            fields=[
                ('ts_start', models.DateTimeField(blank=True, null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='EventID', null=True)),
                ('param1', models.CharField(blank=True, max_length=32, null=True)),
                ('param2', models.CharField(blank=True, max_length=32, null=True)),
                ('stateid', models.IntegerField(blank=True, db_column='StateID', null=True)),
                ('systemid', models.IntegerField(blank=True, db_column='SystemID', null=True)),
                ('ts_end', models.DateTimeField(blank=True, null=True)),
                ('periodid', models.IntegerField(db_column='periodID', primary_key=True, serialize=False)),
                ('eventkey', models.IntegerField(db_column='EventKey')),
                ('statekey', models.IntegerField(db_column='StateKey')),
                ('systemkey', models.IntegerField(db_column='SystemKey')),
                ('validfrom', models.DateTimeField(blank=True, db_column='ValidFrom', null=True)),
                ('validto', models.DateTimeField(blank=True, db_column='ValidTo', null=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_EventData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSiteconfig',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('turbine', models.CharField(blank=True, db_column='Turbine', max_length=4, null=True)),
                ('kksname', models.CharField(blank=True, db_column='KKSName', max_length=2, null=True)),
                ('turbtypeid', models.IntegerField(blank=True, db_column='turbTypeID', null=True)),
                ('pad', models.IntegerField(blank=True, db_column='Pad', null=True)),
                ('gearboxfrom', models.DateTimeField(blank=True, db_column='GearboxFrom', null=True)),
                ('gearbox_make', models.CharField(blank=True, db_column='Gearbox Make', max_length=32, null=True)),
                ('gearbox_model', models.CharField(blank=True, db_column='Gearbox Model', max_length=32, null=True)),
                ('generatorfrom', models.DateTimeField(blank=True, db_column='GeneratorFrom', null=True)),
                ('generator_make', models.CharField(blank=True, db_column='Generator Make', max_length=32, null=True)),
                ('generator_model', models.CharField(blank=True, db_column='Generator Model', max_length=32, null=True)),
                ('nn1', models.IntegerField(blank=True, null=True)),
                ('nn2', models.IntegerField(blank=True, null=True)),
                ('includeinsitetotals', models.IntegerField(blank=True, db_column='IncludeInSiteTotals', null=True)),
                ('mw', models.CharField(blank=True, db_column='MW', max_length=32, null=True)),
            ],
            options={
                'db_table': 't_SiteConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSites',
            fields=[
                ('siteid', models.IntegerField(db_column='SiteID', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=32, null=True)),
                ('doimportflow', models.IntegerField(blank=True, db_column='doImportFlow', null=True)),
                ('dsnid', models.IntegerField(blank=True, db_column='DSNID', null=True)),
                ('strwstagname', models.CharField(blank=True, db_column='strWSTagName', max_length=32, null=True)),
                ('strkwtagname', models.CharField(blank=True, db_column='strkWTagName', max_length=32, null=True)),
                ('streventtagname', models.CharField(blank=True, db_column='strEventTagName', max_length=32, null=True)),
                ('strdsn', models.CharField(blank=True, db_column='strDSN', max_length=32, null=True)),
                ('tz_offsetfromhistorian_h', models.IntegerField(blank=True, db_column='tz_offsetFromHistorian_h', null=True)),
                ('eventmod1000', models.IntegerField(blank=True, db_column='EventMod1000', null=True)),
                ('strstatustagname', models.CharField(blank=True, db_column='strStatusTagName', max_length=32, null=True)),
                ('nnsite1', models.IntegerField(blank=True, db_column='nnSite1', null=True)),
                ('nnsite2', models.IntegerField(blank=True, db_column='nnSite2', null=True)),
                ('albertasmp', models.IntegerField(blank=True, db_column='AlbertaSMP', null=True)),
                ('greencreditstart', models.DateTimeField(blank=True, db_column='GreenCreditStart', null=True)),
                ('greencreditend', models.DateTimeField(blank=True, db_column='GreenCreditEnd', null=True)),
                ('greencredit_cd', models.IntegerField(blank=True, db_column='GreenCredit_cd', null=True)),
                ('ppaescalation', models.CharField(blank=True, db_column='PPAEscalation', max_length=32, null=True)),
                ('greencreditstartperiod', models.IntegerField(blank=True, db_column='GreenCreditStartPeriod', null=True)),
                ('greencreditendperiod', models.IntegerField(blank=True, db_column='GreenCreditEndPeriod', null=True)),
                ('power_in_mw', models.FloatField(blank=True, db_column='Power_in_MW', null=True)),
                ('importtimeoffset_h', models.IntegerField(blank=True, db_column='importTimeOffset_h', null=True)),
            ],
            options={
                'db_table': 't_sites',
                'managed': False,
            },
        ),
    ]
